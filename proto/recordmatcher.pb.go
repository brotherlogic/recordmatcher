// Code generated by protoc-gen-go. DO NOT EDIT.
// source: recordmatcher.proto

package recordmatcher

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Config struct {
	ProcessedRecords     []int32  `protobuf:"varint,1,rep,packed,name=processed_records,json=processedRecords,proto3" json:"processed_records,omitempty"`
	TotalProcessed       int64    `protobuf:"varint,2,opt,name=totalProcessed,proto3" json:"totalProcessed,omitempty"`
	LastRun              int64    `protobuf:"varint,3,opt,name=last_run,json=lastRun,proto3" json:"last_run,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_19215111d931f45e, []int{0}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetProcessedRecords() []int32 {
	if m != nil {
		return m.ProcessedRecords
	}
	return nil
}

func (m *Config) GetTotalProcessed() int64 {
	if m != nil {
		return m.TotalProcessed
	}
	return 0
}

func (m *Config) GetLastRun() int64 {
	if m != nil {
		return m.LastRun
	}
	return 0
}

type MatchRequest struct {
	InstanceId           int32    `protobuf:"varint,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchRequest) Reset()         { *m = MatchRequest{} }
func (m *MatchRequest) String() string { return proto.CompactTextString(m) }
func (*MatchRequest) ProtoMessage()    {}
func (*MatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_19215111d931f45e, []int{1}
}

func (m *MatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchRequest.Unmarshal(m, b)
}
func (m *MatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchRequest.Marshal(b, m, deterministic)
}
func (m *MatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchRequest.Merge(m, src)
}
func (m *MatchRequest) XXX_Size() int {
	return xxx_messageInfo_MatchRequest.Size(m)
}
func (m *MatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MatchRequest proto.InternalMessageInfo

func (m *MatchRequest) GetInstanceId() int32 {
	if m != nil {
		return m.InstanceId
	}
	return 0
}

type MatchResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchResponse) Reset()         { *m = MatchResponse{} }
func (m *MatchResponse) String() string { return proto.CompactTextString(m) }
func (*MatchResponse) ProtoMessage()    {}
func (*MatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_19215111d931f45e, []int{2}
}

func (m *MatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchResponse.Unmarshal(m, b)
}
func (m *MatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchResponse.Marshal(b, m, deterministic)
}
func (m *MatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchResponse.Merge(m, src)
}
func (m *MatchResponse) XXX_Size() int {
	return xxx_messageInfo_MatchResponse.Size(m)
}
func (m *MatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MatchResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Config)(nil), "recordmatcher.Config")
	proto.RegisterType((*MatchRequest)(nil), "recordmatcher.MatchRequest")
	proto.RegisterType((*MatchResponse)(nil), "recordmatcher.MatchResponse")
}

func init() { proto.RegisterFile("recordmatcher.proto", fileDescriptor_19215111d931f45e) }

var fileDescriptor_19215111d931f45e = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x4f, 0x4b, 0xc4, 0x30,
	0x10, 0xc5, 0x8d, 0xa5, 0xab, 0x8c, 0xae, 0x7f, 0xa2, 0x87, 0xf8, 0x07, 0x2c, 0x39, 0x48, 0x41,
	0x58, 0x41, 0x3f, 0x82, 0x5e, 0x3c, 0x2c, 0x48, 0xbc, 0x0a, 0x25, 0x26, 0xa3, 0x06, 0xd6, 0xa4,
	0x66, 0x52, 0xf1, 0xe3, 0x4b, 0x1b, 0x2b, 0x56, 0x3c, 0xe6, 0xf7, 0x5e, 0x66, 0xde, 0x3c, 0x38,
	0x88, 0x68, 0x42, 0xb4, 0x6f, 0x3a, 0x99, 0x57, 0x8c, 0x8b, 0x36, 0x86, 0x14, 0xf8, 0x7c, 0x02,
	0xe5, 0x27, 0xcc, 0x6e, 0x82, 0x7f, 0x76, 0x2f, 0xfc, 0x02, 0xf6, 0xdb, 0x18, 0x0c, 0x12, 0xa1,
	0x6d, 0xb2, 0x89, 0x04, 0xab, 0x8a, 0xba, 0x54, 0x7b, 0x3f, 0x82, 0xca, 0x9c, 0x9f, 0xc3, 0x4e,
	0x0a, 0x49, 0xaf, 0xee, 0x47, 0x41, 0xac, 0x57, 0xac, 0x2e, 0xd4, 0x1f, 0xca, 0x8f, 0x60, 0x73,
	0xa5, 0x29, 0x35, 0xb1, 0xf3, 0xa2, 0x18, 0x1c, 0x1b, 0xfd, 0x5b, 0x75, 0x5e, 0x5e, 0xc2, 0xf6,
	0xb2, 0x0f, 0xa1, 0xf0, 0xbd, 0x43, 0x4a, 0xfc, 0x0c, 0xb6, 0x9c, 0xa7, 0xa4, 0xbd, 0xc1, 0xc6,
	0x59, 0xc1, 0x2a, 0x56, 0x97, 0x0a, 0x46, 0x74, 0x67, 0xe5, 0x2e, 0xcc, 0xbf, 0x3f, 0x50, 0x1b,
	0x3c, 0xe1, 0xd5, 0x23, 0x1c, 0xe6, 0x3c, 0xcb, 0x7c, 0xcc, 0x03, 0xc6, 0x0f, 0x67, 0x90, 0xdf,
	0x42, 0x39, 0x10, 0x7e, 0xb2, 0x98, 0x36, 0xf0, 0x7b, 0xdf, 0xf1, 0xe9, 0xff, 0x62, 0x9e, 0x2d,
	0xd7, 0x9e, 0x66, 0x43, 0x5f, 0xd7, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x33, 0x31, 0x16, 0x7d,
	0x46, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RecordMatcherServiceClient is the client API for RecordMatcherService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecordMatcherServiceClient interface {
	Match(ctx context.Context, in *MatchRequest, opts ...grpc.CallOption) (*MatchResponse, error)
}

type recordMatcherServiceClient struct {
	cc *grpc.ClientConn
}

func NewRecordMatcherServiceClient(cc *grpc.ClientConn) RecordMatcherServiceClient {
	return &recordMatcherServiceClient{cc}
}

func (c *recordMatcherServiceClient) Match(ctx context.Context, in *MatchRequest, opts ...grpc.CallOption) (*MatchResponse, error) {
	out := new(MatchResponse)
	err := c.cc.Invoke(ctx, "/recordmatcher.RecordMatcherService/Match", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecordMatcherServiceServer is the server API for RecordMatcherService service.
type RecordMatcherServiceServer interface {
	Match(context.Context, *MatchRequest) (*MatchResponse, error)
}

func RegisterRecordMatcherServiceServer(s *grpc.Server, srv RecordMatcherServiceServer) {
	s.RegisterService(&_RecordMatcherService_serviceDesc, srv)
}

func _RecordMatcherService_Match_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecordMatcherServiceServer).Match(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recordmatcher.RecordMatcherService/Match",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecordMatcherServiceServer).Match(ctx, req.(*MatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RecordMatcherService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "recordmatcher.RecordMatcherService",
	HandlerType: (*RecordMatcherServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Match",
			Handler:    _RecordMatcherService_Match_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "recordmatcher.proto",
}
